# Generated by Django 4.1 on 2025-03-18 12:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('community', '0001_initial'),
        ('blog', '0008_post_dislikes'),
    ]

    operations = [
        migrations.AddField(
            model_name='comment',
            name='dislikes',
            field=models.ManyToManyField(related_name='disliked_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='comments/images/', verbose_name='Картинка'),
        ),
        migrations.AddField(
            model_name='comment',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='comment',
            name='is_parent',
            field=models.BooleanField(default=False, verbose_name='self'),
        ),
        migrations.AddField(
            model_name='comment',
            name='likes',
            field=models.ManyToManyField(related_name='liked_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='reply_for',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment'),
        ),
        migrations.AddField(
            model_name='post',
            name='commented_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='community',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_posts', to='community.community'),
        ),
        migrations.AddField(
            model_name='post',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='image',
            field=models.ImageField(blank=True, upload_to='posts/images/', verbose_name='Картинка'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(null=True)),
                ('comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.comment')),
                ('comment_disliker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_disliked_notifications', to=settings.AUTH_USER_MODEL)),
                ('comment_liker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_liked_notifications', to=settings.AUTH_USER_MODEL)),
                ('liked_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='liked_notifications', to='blog.post')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.post')),
                ('post_disliker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disliked_notifications', to=settings.AUTH_USER_MODEL)),
                ('post_liker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='liked_notifications', to=settings.AUTH_USER_MODEL)),
                ('reply_to_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_replies', to='blog.comment')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
